import{r as m,av as j,R as $}from"./index-BTF902Fp.js";import{y as V,z as I}from"./index-q87_Cv0L.js";const A={BASE_URL:"/desktop-tools/",DEV:!1,MODE:"production",PROD:!0,SSR:!1},x=t=>{let e;const n=new Set,o=(s,f)=>{const c=typeof s=="function"?s(e):s;if(!Object.is(c,e)){const i=e;e=f??(typeof c!="object"||c===null)?c:Object.assign({},e,c),n.forEach(a=>a(e,i))}},r=()=>e,S={setState:o,getState:r,getInitialState:()=>v,subscribe:s=>(n.add(s),()=>n.delete(s)),destroy:()=>{(A?"production":void 0)!=="production"&&console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),n.clear()}},v=e=t(o,r,S);return S},P=t=>t?x(t):x;var w={exports:{}},b={},D={exports:{}},R={};/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var d=m;function k(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var T=typeof Object.is=="function"?Object.is:k,W=d.useState,q=d.useEffect,z=d.useLayoutEffect,C=d.useDebugValue;function B(t,e){var n=e(),o=W({inst:{value:n,getSnapshot:e}}),r=o[0].inst,u=o[1];return z(function(){r.value=n,r.getSnapshot=e,h(r)&&u({inst:r})},[t,n,e]),q(function(){return h(r)&&u({inst:r}),t(function(){h(r)&&u({inst:r})})},[t]),C(n),n}function h(t){var e=t.getSnapshot;t=t.value;try{var n=e();return!T(t,n)}catch{return!0}}function F(t,e){return e()}var L=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?F:B;R.useSyncExternalStore=d.useSyncExternalStore!==void 0?d.useSyncExternalStore:L;D.exports=R;var M=D.exports;/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var E=m,U=M;function G(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var H=typeof Object.is=="function"?Object.is:G,J=U.useSyncExternalStore,K=E.useRef,N=E.useEffect,Q=E.useMemo,X=E.useDebugValue;b.useSyncExternalStoreWithSelector=function(t,e,n,o,r){var u=K(null);if(u.current===null){var l={hasValue:!1,value:null};u.current=l}else l=u.current;u=Q(function(){function S(i){if(!v){if(v=!0,s=i,i=o(i),r!==void 0&&l.hasValue){var a=l.value;if(r(a,i))return f=a}return f=i}if(a=f,H(s,i))return a;var y=o(i);return r!==void 0&&r(a,y)?a:(s=i,f=y)}var v=!1,s,f,c=n===void 0?null:n;return[function(){return S(e())},c===null?void 0:function(){return S(c())}]},[e,n,o,r]);var p=J(t,u[0],u[1]);return N(function(){l.hasValue=!0,l.value=p},[p]),X(p),p};w.exports=b;var Y=w.exports;const Z=j(Y),O={BASE_URL:"/desktop-tools/",DEV:!1,MODE:"production",PROD:!0,SSR:!1},{useDebugValue:tt}=$,{useSyncExternalStoreWithSelector:et}=Z;let g=!1;const nt=t=>t;function rt(t,e=nt,n){(O?"production":void 0)!=="production"&&n&&!g&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),g=!0);const o=et(t.subscribe,t.getState,t.getServerState||t.getInitialState,e,n);return tt(o),o}const _=t=>{(O?"production":void 0)!=="production"&&typeof t!="function"&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const e=typeof t=="function"?P(t):t,n=(o,r)=>rt(e,o,r);return Object.assign(n,e),n},st=t=>t?_(t):_;function it(t){const e=m.useRef({});return n=>{if(!n)return e.current;const o=V(n,t);return I(e.current,o)?e.current:e.current=o}}function ct(t){const{if:e,children:n}=t;return e?n:null}export{ct as S,st as c,it as u};
