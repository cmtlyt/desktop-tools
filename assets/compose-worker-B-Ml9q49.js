const I=Symbol&&Symbol("internal-empty")||{},c=function(t){const n=(t==null?void 0:t.clength)||(t==null?void 0:t.length)||0;if(!n)throw new TypeError("无法读取函数参数列表的长度，不能使用可选参数和剩余参数！！！");const r=(...e)=>{if(e.length>=n)return t(...e);{const o=(...i)=>r(...e.concat(i));return o.clength=n-e.length,o}};return r.clength=n,r};function O(t,n){return t(...n)}c(O);function R(t,n){return n(t)}c(R);function N(t,n){if(n=Number(n),U(n))throw new TypeError("limit must be a number");const r=(...e)=>t(...e.slice(0,n));return r.clength=n,r}c(N);const d=Symbol&&Symbol("__")||{};function g(t){return(...n)=>{const r=(...e)=>{let o=0;const i=n.map(a=>a===d?e[o++]:a);if(e.length!==o)throw new TypeError("非法调用, 参数数量不匹配");return t(...i)};return r.clength=n.reduce((e,o)=>e+(o===d?1:0),0),r}}g.__=d;function W(t){return!!(h(t)||t instanceof String||t&&typeof t=="object"&&typeof t.length=="number")}function h(t){return Array.isArray(t)}function B(t){let n=I;return function(...r){return n!==I?n:n=t(...r)}}function b(t){const n=typeof t;return n!=="object"&&n!=="function"?n:Object.prototype.toString.call(t).slice(8,-1).toLowerCase()}function C(t){return typeof t>"u"||typeof t=="object"&&t===null}function U(t){return typeof t=="number"&&t!==t}function _(t){return typeof t=="string"}function z(t,n,r){const e=[...r];return e[t]=n(e[t],t),e}c(z);function P(t,n){return t<=0?[n]:(t=~~t,Array.from({length:Math.ceil(n.length/t)},(r,e)=>n.slice(e*t,e*t+t)))}c(P);function X(t,n){return[...y(n),t]}c(X);function F(t,n){if(!h(n))throw new TypeError("arr 必须是数组");if(!n.length)return[];const r=[];return n.reduce((e,o,i)=>{const a=t(o,i),s=r.indexOf(a),f=~s?s:r.push(a)-1;return(e[f]||(e[f]=[])).push(o),e},[])}c(F);function q(t,n){return n.every((r,e)=>t(r,e))}c(q);function J(t,n){return n.filter((r,e)=>t(r,e))}c(J);function Q(t,n){return n.find((r,e)=>t(r,e))}c(Q);function Y(t,n){return n.findIndex((r,e)=>t(r,e))}c(Y);function Z(t,n){return n.reduce((r,e)=>{const o=t(e);return r[o]||(r[o]=[]),r[o].push(e),r},{})}c(Z);function G(t,n){const r=n.length;let e=0;const o=[];for(;e<r;){let i=e+1;for(;i<r&&t(n[i],n[i-1]);)++i;o.push(n.slice(e,i)),e=i}return o}c(G);function V(t,n){return n.includes(t)}c(V);function K(t,n){return n.join(t)}c(K);function tt(t,n){return Array.from({length:n},(r,e)=>t(e))}const nt=c(tt);function rt(t,n){return n.map((r,e)=>t(r,e))}c(rt);function et(t,n){if(!h(n)&&typeof n!="string")throw new TypeError("arr 必须是数组");if(t<0&&(t=n.length+t),!(t<0||t>=n.length))return n[t]}c(et);function v(t,n,r){return r.reduce((e,o,i)=>t(e,o,i),n)}const ot=c(v);function ct(t,n){return v((r,e,o)=>(r[t(e,o)?"right":"left"].push(e),r),{left:[],right:[]},n)}c(ct);function it(t,n){return nt(()=>t,n)}c(it);function ut(t,n){return n.some((r,e)=>t(r,e))}c(ut);function at(t,n){if(!h(n)&&!_(n))throw new TypeError("arr 必须是数组或字符串");return n.slice(0,t)}c(at);function st(t,n){return[t,n]}c(st);function y(t){return C(t)?[]:h(t)?t:W(t)?Array.from(t):[t]}function ft(t,n){return t===n}c(ft);function lt(t,n){return t>n}c(lt);function gt(t,n){return t<n}c(gt);c((t,n)=>{try{t(n)}catch{}return n});function ht(t,n,r){return t(r)?n(r):r}c(ht);function S(t,n){if(typeof t!="object")throw new TypeError("Spec must be an object");return Object.keys(t).reduce((r,e)=>{const o=t[e];return typeof o=="function"?r[e]=t[e](...n):r[e]=S(o,n),r},{})}c(S);function T(t,n,r,e="."){let o=t;h(o)||(_(o)?o=o.split(e):o=y(o));const i=b(r);if(i!=="array"&&i!=="object")throw new TypeError("source must be array or object");const a=i==="array"?[...r]:{...r},s=o.slice(0,-1).reduce((f,m)=>i==="array"?f[m]=[]:f[m]||(f[m]={}),a);return s[o.pop()]=n,a}const{__:w}=g;c(g(T)(w,w,w,"."));function k(t,n){const r={};for(const e in n){const o=n[e];b(o)==="object"?r[e]=k(t,o):r[e]=t(o,e)}return r}c(k);function $(t,n,r){const e={};for(const o in r){const i=r[o];b(i)==="object"?e[o]=$(t,n,i):n(i,o)?e[o]=t(i,o):e[o]=i}return e}c($);function H(t,n,r="."){return!r&&typeof t=="string"?n[t]:(h(t)?t:String(t).split(r)).reduce((e,o)=>C(e)?e:e[o],n)}const j=g.__;c(g(H)(j,j,"."));function mt(t,n){const r={...n};return delete r[t],r}c(mt);function pt(t,n){const r={},e=y(t);return Object.keys(n).forEach(o=>{e.includes(o)||(r[o]=n[o])}),r}c(pt);function yt(t,n){const r={};return y(t).forEach(e=>r[e]=n[e]),r}c(yt);function M(t,n){return n[t]}c(M);function wt(t,n,r="."){return ot((e,o)=>T(o,H(o,n,r),e,r),{},t)}const{__:E}=g;c(g(wt)(E,E,"."));function dt(t,n){const r={...n};for(const e in t){const o=M(e,n);delete r[e],r[t[e]]=o}return r}c(dt);function bt(t,n){return n.then(t)}c(bt);const Dt=(t,n)=>t;c(Dt);const It=(t,n)=>n??t;c(It);const u={ctx:null,width:0,height:0,originImageData:new ImageData(1,1),imageData:new ImageData(1,1)};function jt(t){var o;if(t.startsWith("#")){const[i,a,s]=((o=t.match(/\w{2}/g))==null?void 0:o.map(f=>parseInt(f,16)))??[0,0,0];return[i,a,s]}else t.startsWith("rgb")&&(t=t.replace(/^rgba?\((.*?)\)$/,"$1"));const[n=0,r=0,e=0]=t.split(",").map(i=>parseInt(i.trim(),10)).filter(i=>!isNaN(i));return[n,r,e]}function Et(t,n){return r=>r.every((e,o)=>Math.abs(e-t[o])<n)}async function x(t){return fetch(t).then(n=>n.blob()).then(n=>createImageBitmap(n)).then(n=>{const{ctx:r}=u;if(!r)return new ImageData(1,1);const{width:e,height:o}=n;r.canvas.width=e,r.canvas.height=o,r.clearRect(0,0,e,o),r.drawImage(n,0,0);const i=r.getImageData(0,0,e,o);return r.clearRect(0,0,e,o),i})}async function xt(t){const{imgs:n,options:r}=t,{jitterRange:e=30,replaceColor:o="#000000"}=r,i=jt(o),a=Et(i,e),s=await x(n[0]);u.width=s.width,u.height=s.height,u.originImageData=s;const f=s.data;for(const m of n.slice(1)){const{data:p}=await x(m);for(let l=0;l<p.length;l+=4){const D=[p[l],p[l+1],p[l+2],p[l+3]];a(D.slice(0,3))||D.forEach((A,L)=>f[l+L]=A)}}u.imageData=s}function Ct(t){const{ctx:n}=u;if(!n)return;const{width:r,height:e}=u;n.canvas.width=r,n.canvas.height=e,n.clearRect(0,0,r,e),n.putImageData(u.imageData,0,0)}const _t=B(async()=>import("./index-DMFccjB8.js").then(function(t){return t.i}));async function vt(t,n){const r=await _t();return n.reduce((e,o)=>{var i;return((i=r[o])==null?void 0:i.call(r,e))||e},t)}async function St(t){if(u.imageData=u.originImageData,!t.filterList.length)return;const n=structuredClone(u.imageData);u.imageData=await vt(n,t.filterList)}function Tt(t){const{offscreen:n}=t,e=n.getContext("2d");e&&(u.ctx=e)}self.addEventListener("message",async({data:t})=>{const{action:n,option:r}=t;switch(n){case"init":{Tt(r);break}case"compose":{await xt(r);break}case"filter":{await St(r);break}case"drawImage":{Ct();break}}self.postMessage({action:n})});
